<!-- 
| Datei                                 | Zweck                                                      |
| ------------------------------------- | ---------------------------------------------------------- |
| `main.ts`                             | Einstiegspunkt, startet die App                            |
| `app.module.ts`                       | Hauptmodul, importiert andere Module                       |
| `messages/messages.controller.ts`     | Verantwortlich für die HTTP-Routen der Nachrichten         |
| `messages/messages.service.ts`        | Enthält die Logik, z.B. Nachrichten speichern und abrufen  |
| `messages/dto/create-message.dto.ts`  | Definiert, wie neue Nachrichten aussehen (für Validierung) |
| `messages/entities/message.entity.ts` | Modell der Nachricht (z.B. Felder, Typen)                  | 
-->
<!-- 

So sieht der Flow aus:

    AppModule lädt das MessagesModule

    MessagesModule stellt Controller & Service bereit

    Controller empfängt HTTP-Requests

    Service verwaltet die Nachrichten-Daten im Speicher

    DTOs definieren, wie Eingaben aussehen sollen

    Entities definieren Daten-Strukturen 
-->

<!-- 

Nachrichten hinzufügen
$ curl -X POST http://localhost:3000/messages \
> -H "Content-Type: application/json" \
> -d '{"title": "Grillabend", "description": "Am Flussufer", "author": "Sophie"}'
{"id":"b067efa7-9508-4805-b66c-6305e61bf52c","title":"Grillabend","description":"Am Flussufer","author":"Sophie","createdAt":"2025-07-01T19:35:27.618Z"}

1bsp
curl -X POST http://localhost:3000/messages \
  -H "Content-Type: application/json" \
  -d '{"title": "Grillabend", "description": "Am Flussufer", "author": "Sophie"}'

2bsp
curl -X POST http://localhost:3000/messages \
  -H "Content-Type: application/json" \
  -d '{"title": "Kinoabend", "description": "Neue Filme", "author": "Max"}'

3bsp
curl -X POST http://localhost:3000/messages \
  -H "Content-Type: application/json" \
  -d '{"title": "Wanderung", "description": "Bergtour am Sonntag", "author": "Anna"}'


Nachrichten anzeigen (mit IDs)
curl http://localhost:3000/messages


Nachricht aktualisieren (PUT)
curl -X PUT http://localhost:3000/messages/<ID> \
  -H "Content-Type: application/json" \
  -d '{"title": "Geänderter Titel", "description": "Neue Beschreibung", "author": "Neuer Autor"}'

curl -X PUT http://localhost:3000/messages/b067efa7-9508-4805-b66c-6305e61bf52c \
  -H "Content-Type: application/json" \
  -d '{"title": "Sommergrillparty", "description": "Am Seeufer", "author": "Sophie"}'



Nachricht löschen (DELETE)
curl -X DELETE http://localhost:3000/messages/<ID>

curl -X DELETE http://localhost:3000/messages/b067efa7-9508-4805-b66c-6305e61bf52c




| Aktion        | HTTP Methode | Beispiel                                   |
| ------------- | ------------ | ------------------------------------------ |
| Erstellen     | POST         | `curl -X POST ... -d '{"title":"..."}'`    |
| Abrufen       | GET          | `curl http://localhost:3000/messages`      |
| Aktualisieren | PUT          | `curl -X PUT .../messages/<ID> -d '{...}'` |
| Löschen       | DELETE       | `curl -X DELETE .../messages/<ID>`         |






http://localhost:3000/api



cd nachrichten-api
npm run start
-->